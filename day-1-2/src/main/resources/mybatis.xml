<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!--    1.通过配置文件，配置数据库连接的参数，使数据库的配置灵活了，可以任意使用数据库系统-->
    <properties resource="db.properties" ></properties>
    <typeAliases>
<!--        两种配置方式，给usermapper.xml文件里的参数类型或返回类型进行改名操作，配置pojo类的简介写法，起小名-->
<!--        1.1 方式1. 改类名，全类名配置，tiantian.com.pojo.User  小名：User-->
    <typeAlias type="tiantian.com.pojo.User" alias="User"/>
<!--       1.2 方式2. 包名配置，通过package管理到具体的包，管理了该包下所有的实体类
            特点：写sql语句时，做好写小写对象User
-->
<!--        <package name="tiantian.com.pojo"/> -->
<!--        3. 使用注解版，在实体类User中使用注解-->

    </typeAliases>
<!--    4. 数据库的使用配置，可以使用多个数据源，默认使用那个数据源，默认指定的数据库环境-->
    <environments default="lgjdb">

        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url"
                          value="jdbc:mysql://localhost:3306/xsg?serverTimezone=UTC&amp;useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8"/>
                <property name="username" value="root"/>
                <property name="password" value="1234"/>
            </dataSource>
        </environment>
<!--3. 环境配置： id=环境名称-->
        <environment id="lgjdb">
<!--            3.1事务管理器transactionManager  ：JDBC-->
        <transactionManager type="JDBC"/>
<!--            3.2数据源配置：就是数据库的配置-->
        <dataSource type="POOLED">
<!--  调用db.properties里面的属性-->
<!--            3.3厂家驱动配置-->
            <property name="driver" value="${driver}"/>
<!--            3.4数据库连接配置-->
            <property name="url" value="${url}"/>
<!--            3.5用户名配置-->
            <property name="username" value="${username}"/>
<!--            3.6用户密码配置-->
            <property name="password" value="${password}"/>
        </dataSource>
        </environment>

    </environments>
<!--    6. Dao层配置：就是在连接数据库后，对数据库的表进行了哪些操作

-->
    <mappers>
<!--        方式1 .通过资源配置，读取UserMapper.xml-->
<!--        <mapper resource="tiantian/com/Dao/UserMapper.xml"></mapper>-->
<!--        方式2. 使用包名配置，扫描到包中的所有Dao对象-->
        <!--        <package name="tiantian.com.Dao"/>-->
<!--        方式3. 类配置，配置了指定的接口类UserMapper，使用class映射配置 -->
        <mapper class="tiantian.com.Dao.UserMapper"/>
    </mappers>
</configuration>